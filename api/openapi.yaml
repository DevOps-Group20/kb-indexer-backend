---
openapi: 3.0.0
info:
  title: KB Indexer API
  description: This API is used for admins of the KB-Indexer to index sources
  contact:
    email: danielv2000@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/DanielVerner/kb-indexer/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8090
  description: Main
security:
- bearerAuth:
  - test
paths:
  /indexers:
    get:
      description: Returns list of all available indexers and their respective resource types
      operationId: getIndexers
      responses:
        "200":
          description: Array of all indexers and their sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexer'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-swagger-router-controller: Default
  /index:
    post:
      description: Runs indexing pipline
      operationId: runIndexingPipeline
      requestBody:
        description: Request indexer to execute with optional respecitive source
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/index_body'
      responses:
        "200":
          description: Indexing started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid input
        "401":
          description: Access token is missing or invalid
        "404":
          description: Resource not found
        "418":
          description: |
            Can't brew coffee, server is a teapot.<br>
            https://www.rfc-editor.org/rfc/rfc2324#section-2.3.2
      x-swagger-router-controller: Default
  /events:
    get:
      description: Subscribe to a global stream of server-sent events for indexing updates.
      operationId: subscribeToEvents
      responses:
        "200":
          description: Starts listening to server side events. The initial value is the list of all running jobs and Cron jobs. The remainder of the contents will be return as  Job/CronJob object depending on what changed.
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/JobObject'
        "401":
          description: Unauthorized access
      x-swagger-router-controller: Default
components:
  schemas:
    Indexer:
      type: object
      properties:
        name:
          type: string
          example: Notebooks
        sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
      example:
        sources:
        - name: Kaggle
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: Something
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: SomethinElse
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Source:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          example: Kaggle
      example:
        name: Kaggle
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Job:
      type: object
      properties:
        name:
          type: string
        pipeline_id:
          type: string
          format: uuid
        status:
          type: object
    CronJob:
      type: object
      properties:
        name:
          type: string
        pipeline_id:
          type: string
          format: uuid
        schedule:
          type: string
          description: Cron job string
          example: '* * * * *'
    JobObject:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        cronJobs:
          type: array
          items:
            $ref: '#/components/schemas/CronJob'
    index_body:
      required:
      - indexer_id
      type: object
      properties:
        pipeline_id:
          type: string
          format: uuid
    inline_response_200:
      type: object
      properties:
        message:
          type: string
          example: Indexing started successfully.
      example:
        message: Indexing started successfully.
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
